#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CHANGELOG.md
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã
 */

/* eslint-disable no-console */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const CHANGELOG_PATH = path.join(__dirname, '../../CHANGELOG.md');

function checkChangelog() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ CHANGELOG.md...\n');

  if (!fs.existsSync(CHANGELOG_PATH)) {
    console.error('‚ùå –§–∞–π–ª CHANGELOG.md –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    process.exit(1);
  }

  const changelogContent = fs.readFileSync(CHANGELOG_PATH, 'utf8');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
  const versionRegex = /## \[(\d+\.\d+\.\d+)\]/;
  const versions = changelogContent.match(new RegExp(versionRegex, 'g'));
  
  if (!versions || versions.length === 0) {
    console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –≤ CHANGELOG.md!');
    process.exit(1);
  }

  const latestVersion = versions[0];
  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è: ${latestVersion}`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–µ–∫—Ü–∏–π
  const requiredSections = [
    '### –î–æ–±–∞–≤–ª–µ–Ω–æ',
    '### –ò–∑–º–µ–Ω–µ–Ω–æ', 
    '### –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ',
    '### –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —á–∞—Å—Ç—å'
  ];

  const missingSections = requiredSections.filter(section => 
    !changelogContent.includes(section)
  );

  if (missingSections.length > 0) {
    console.warn(`‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–µ–∫—Ü–∏–∏: ${missingSections.join(', ')}`);
  } else {
    console.log('‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–∞–∫–µ—Ç–æ–≤
  if (changelogContent.includes('### –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã')) {
    console.log('‚úÖ –°–µ–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–∞');
  } else {
    console.warn('‚ö†Ô∏è  –°–µ–∫—Ü–∏—è "–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã" –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–º–∞–Ω–¥
  if (changelogContent.includes('### –ö–æ–º–∞–Ω–¥—ã –¥–ª—è')) {
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞–π–¥–µ–Ω—ã');
  } else {
    console.warn('‚ö†Ô∏è  –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  if (changelogContent.includes('### –†–µ–∑—É–ª—å—Ç–∞—Ç')) {
    console.log('‚úÖ –°–µ–∫—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–∞');
  } else {
    console.warn('‚ö†Ô∏è  –°–µ–∫—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
  }

  console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ CHANGELOG.md –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkChangelog();
