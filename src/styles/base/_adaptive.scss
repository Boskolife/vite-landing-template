$maxWidth: 1440;
$maxWidthContainer: 1320;
$minWidth: 320;

@mixin adaptive-value ($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;

    @if $type==1 {
        /* Only if smaller than container */
        #{$property}: $startSize + px;

        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - calc(#{$minWidth + px})) / #{$maxWidthContainer - $minWidth}));
        }
    }

    @else if $type==2 {
        /* Only if larger than container */
        #{$property}: $startSize + px;

        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - calc(#{$minWidth + px})) / #{$maxWidth - $minWidth}));
        }
    }

    @else {
        /* In all cases */
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - calc(#{$minWidth + px})) / #{$maxWidth - $minWidth}));
    }
}

/* Init */

/*  @include adaptive-value("padding-top", 15, 7, 1);
    @include adaptive-value("padding-bottom", 15, 7, 1);
    @include adaptive-value("padding-right", 15, 7, 1);
    @include adaptive-value("padding-left", 15, 7, 1);

    @include adaptive-value("margin-top", 15, 7, 1);
    @include adaptive-value("margin-bottom", 40 , 20, 1);
    @include adaptive-value("margin-right", 15, 7, 1);
    @include adaptive-value("margin-left", 15, 7, 1);

    @include adaptive-value("font-size", 115, 96, 1);
*/

/* "padding" - property that needs to be adapted */
/* 50 - maximum property value in px */
/* 20 - minimum property value in px */
/* 0 or 1 or 2 - ($type) condition for which adaptation will be performed */